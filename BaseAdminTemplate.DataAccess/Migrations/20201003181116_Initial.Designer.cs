// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201003181116_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae1e9a74-cb0d-46e3-85a9-c3628ffba9bd"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 202, DateTimeKind.Local).AddTicks(2074),
                            IsActive = true,
                            MenuId = new Guid("34100b28-fefa-4e27-b8ec-c913c0920cbb"),
                            PermissionId = new Guid("d194873e-dfd7-47aa-90f4-b159039b44c3")
                        },
                        new
                        {
                            Id = new Guid("c1436f45-9bd2-4f31-9cf9-5f9fd2a8548a"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 205, DateTimeKind.Local).AddTicks(3731),
                            IsActive = true,
                            MenuId = new Guid("a7a19352-a89e-449f-ac12-31ff7b79ed8b"),
                            PermissionId = new Guid("ca30f026-0457-4aab-909a-aea2b3d56cdf")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b925fb2-79e4-4200-b47e-c644b4391886"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 202, DateTimeKind.Local).AddTicks(4067),
                            IsActive = true,
                            PermissionId = new Guid("d194873e-dfd7-47aa-90f4-b159039b44c3"),
                            RoleId = new Guid("afb3f4e5-789d-4057-901d-0abb71bbe2d1")
                        },
                        new
                        {
                            Id = new Guid("48a9b186-a6e2-430d-9784-d0a0372da748"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 205, DateTimeKind.Local).AddTicks(3792),
                            IsActive = true,
                            PermissionId = new Guid("ca30f026-0457-4aab-909a-aea2b3d56cdf"),
                            RoleId = new Guid("afb3f4e5-789d-4057-901d-0abb71bbe2d1")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34100b28-fefa-4e27-b8ec-c913c0920cbb"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 201, DateTimeKind.Local).AddTicks(3500),
                            IsActive = true,
                            Name = "Role Management"
                        },
                        new
                        {
                            Id = new Guid("a7a19352-a89e-449f-ac12-31ff7b79ed8b"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 205, DateTimeKind.Local).AddTicks(2674),
                            IsActive = true,
                            Name = "Test Controller"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d194873e-dfd7-47aa-90f4-b159039b44c3"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 201, DateTimeKind.Local).AddTicks(9093),
                            IsActive = true,
                            Name = "Create Role"
                        },
                        new
                        {
                            Id = new Guid("ca30f026-0457-4aab-909a-aea2b3d56cdf"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 205, DateTimeKind.Local).AddTicks(3636),
                            IsActive = true,
                            Name = "Test Controller Method"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afb3f4e5-789d-4057-901d-0abb71bbe2d1"),
                            CreatedDate = new DateTime(2020, 10, 3, 21, 11, 16, 189, DateTimeKind.Local).AddTicks(1969),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69f7a1be-0d5b-4cbb-8469-2d7c3f6099b4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedDate = new DateTime(2020, 10, 3, 21, 11, 16, 200, DateTimeKind.Local).AddTicks(6560),
                            Email = "admin",
                            IsActive = true,
                            Name = "Admin",
                            Password = "KJpqEwxnEmXG63kXp5VTsY5cAxRjeAnWGOqc4ZVMgPw=",
                            Surname = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
