// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201009120208_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("324d41a5-9c02-4b07-8e13-6dfcbd492609"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 454, DateTimeKind.Local).AddTicks(3276),
                            IsActive = true,
                            MenuId = new Guid("2bb7e44c-4cd0-4761-8f56-24d7e3893295"),
                            PermissionId = new Guid("2f9c5c9d-393d-4138-9ad2-58718e50c5cd")
                        },
                        new
                        {
                            Id = new Guid("b8f63668-0c4f-418f-b0b4-d5b2e27bedfc"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 454, DateTimeKind.Local).AddTicks(9292),
                            IsActive = true,
                            MenuId = new Guid("2bb7e44c-4cd0-4761-8f56-24d7e3893295"),
                            PermissionId = new Guid("bb118689-efd1-431a-a8ba-5453ebcf07d4")
                        },
                        new
                        {
                            Id = new Guid("070f36b7-7cda-42c4-9080-13e8546c0a6a"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 455, DateTimeKind.Local).AddTicks(2289),
                            IsActive = true,
                            MenuId = new Guid("2bb7e44c-4cd0-4761-8f56-24d7e3893295"),
                            PermissionId = new Guid("b490a309-a261-4852-aadf-40cdf3c86b11")
                        },
                        new
                        {
                            Id = new Guid("9f49ffc9-7456-42d2-baa7-a6e4d4df8668"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 455, DateTimeKind.Local).AddTicks(2669),
                            IsActive = true,
                            MenuId = new Guid("2bb7e44c-4cd0-4761-8f56-24d7e3893295"),
                            PermissionId = new Guid("5a967e8a-f359-4ff7-9f1f-7002ce5a5e87")
                        },
                        new
                        {
                            Id = new Guid("c381cb9c-5c8d-407e-9212-ac13c1cf61dd"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 460, DateTimeKind.Local).AddTicks(4858),
                            IsActive = true,
                            MenuId = new Guid("af33d2d7-6188-476a-87f3-8426d605833a"),
                            PermissionId = new Guid("e21b015f-52a6-4988-a0d6-187f9b0e4655")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d762f33a-efc4-4ee4-b76e-110086c31cd4"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 454, DateTimeKind.Local).AddTicks(7809),
                            IsActive = true,
                            PermissionId = new Guid("2f9c5c9d-393d-4138-9ad2-58718e50c5cd"),
                            RoleId = new Guid("1fcae457-b4c7-4833-9ab0-af88610018df")
                        },
                        new
                        {
                            Id = new Guid("0d7d4ab1-9278-4af6-bfed-8dec673358eb"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 454, DateTimeKind.Local).AddTicks(9389),
                            IsActive = true,
                            PermissionId = new Guid("bb118689-efd1-431a-a8ba-5453ebcf07d4"),
                            RoleId = new Guid("1fcae457-b4c7-4833-9ab0-af88610018df")
                        },
                        new
                        {
                            Id = new Guid("66a8e680-85a9-416f-9eca-56b42320b6fe"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 455, DateTimeKind.Local).AddTicks(2332),
                            IsActive = true,
                            PermissionId = new Guid("b490a309-a261-4852-aadf-40cdf3c86b11"),
                            RoleId = new Guid("1fcae457-b4c7-4833-9ab0-af88610018df")
                        },
                        new
                        {
                            Id = new Guid("e15f75df-1e26-4907-aeb2-2c28478033cb"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 455, DateTimeKind.Local).AddTicks(2705),
                            IsActive = true,
                            PermissionId = new Guid("5a967e8a-f359-4ff7-9f1f-7002ce5a5e87"),
                            RoleId = new Guid("1fcae457-b4c7-4833-9ab0-af88610018df")
                        },
                        new
                        {
                            Id = new Guid("07849aec-cfa4-4789-96c9-b37a2a412e1f"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 460, DateTimeKind.Local).AddTicks(4919),
                            IsActive = true,
                            PermissionId = new Guid("e21b015f-52a6-4988-a0d6-187f9b0e4655"),
                            RoleId = new Guid("1fcae457-b4c7-4833-9ab0-af88610018df")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a73323a-8da1-476b-9d05-a37621994b56"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 448, DateTimeKind.Local).AddTicks(7513),
                            IsActive = true,
                            RoleId = new Guid("1fcae457-b4c7-4833-9ab0-af88610018df"),
                            UserId = new Guid("1a199235-9590-4bc3-9503-0d539a51d106")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bb7e44c-4cd0-4761-8f56-24d7e3893295"),
                            ControllerName = "Role",
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 451, DateTimeKind.Local).AddTicks(9191),
                            DisplayInMenu = true,
                            DisplayName = "Role Management",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("af33d2d7-6188-476a-87f3-8426d605833a"),
                            ControllerName = "User",
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 460, DateTimeKind.Local).AddTicks(2671),
                            DisplayInMenu = true,
                            DisplayName = "User Management",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("DisplayInPermissionTree")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f9c5c9d-393d-4138-9ad2-58718e50c5cd"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 453, DateTimeKind.Local).AddTicks(5701),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("bb118689-efd1-431a-a8ba-5453ebcf07d4"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 454, DateTimeKind.Local).AddTicks(8980),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("b490a309-a261-4852-aadf-40cdf3c86b11"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 455, DateTimeKind.Local).AddTicks(2160),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Delete",
                            IsActive = true,
                            MethodName = "Delete"
                        },
                        new
                        {
                            Id = new Guid("5a967e8a-f359-4ff7-9f1f-7002ce5a5e87"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 455, DateTimeKind.Local).AddTicks(2480),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("e21b015f-52a6-4988-a0d6-187f9b0e4655"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 460, DateTimeKind.Local).AddTicks(4510),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1fcae457-b4c7-4833-9ab0-af88610018df"),
                            CreatedDate = new DateTime(2020, 10, 9, 15, 2, 7, 429, DateTimeKind.Local).AddTicks(418),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a199235-9590-4bc3-9503-0d539a51d106"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedDate = new DateTime(2020, 10, 9, 15, 2, 7, 448, DateTimeKind.Local).AddTicks(4401),
                            Email = "admin",
                            IsActive = true,
                            Name = "admin",
                            Password = "VGLAdIqpnS7UQrjEYXwuKvz/r3MqrlpxNgGo6vbDw3M=",
                            Surname = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
