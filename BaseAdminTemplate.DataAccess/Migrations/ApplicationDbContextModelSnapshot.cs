// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d48e8c84-05fb-4817-99aa-458b2e5f097c"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 705, DateTimeKind.Local).AddTicks(4374),
                            IsActive = true,
                            MenuId = new Guid("58a89202-d09f-4d17-bf6e-f22d5aaa8ed7"),
                            PermissionId = new Guid("930a7eb7-3483-498d-b9d3-680f1763f245")
                        },
                        new
                        {
                            Id = new Guid("fd8d33f3-45a5-484b-907b-edef83529eba"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(5768),
                            IsActive = true,
                            MenuId = new Guid("e5d70c31-13b7-4d81-8667-cc66d1db74f2"),
                            PermissionId = new Guid("6fccfd9c-43d3-4fb4-8717-5d34999b781c")
                        },
                        new
                        {
                            Id = new Guid("db163ad8-9890-43c4-b262-e830cd282387"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(6000),
                            IsActive = true,
                            MenuId = new Guid("e5d70c31-13b7-4d81-8667-cc66d1db74f2"),
                            PermissionId = new Guid("2d6ef6d4-ae00-4231-beea-7089e6a07f34")
                        },
                        new
                        {
                            Id = new Guid("dae85a4a-afac-4374-bc0a-a08e4655fa86"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(7260),
                            IsActive = true,
                            MenuId = new Guid("e5d70c31-13b7-4d81-8667-cc66d1db74f2"),
                            PermissionId = new Guid("8d560935-a636-4795-8520-1b58ca0100fd")
                        },
                        new
                        {
                            Id = new Guid("453bab10-ef8e-4b26-a428-40e13da04281"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(7447),
                            IsActive = true,
                            MenuId = new Guid("e5d70c31-13b7-4d81-8667-cc66d1db74f2"),
                            PermissionId = new Guid("e081d3e6-974d-45e9-8776-c6c8a4d943a6")
                        },
                        new
                        {
                            Id = new Guid("b43c9c56-1e23-419c-9722-ddebcd923a26"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(593),
                            IsActive = true,
                            MenuId = new Guid("644c7ce5-7aa4-4ac6-b7b0-354de647dda2"),
                            PermissionId = new Guid("403232fa-852c-41cc-bcb1-aff5e0749d9e")
                        },
                        new
                        {
                            Id = new Guid("49015186-444f-41d1-9d21-624345f01472"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(743),
                            IsActive = true,
                            MenuId = new Guid("644c7ce5-7aa4-4ac6-b7b0-354de647dda2"),
                            PermissionId = new Guid("1929c157-9e31-42da-af8a-f0c3b27d0c96")
                        },
                        new
                        {
                            Id = new Guid("c384c5e9-3eea-4872-9f90-48abd1f541a7"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1002),
                            IsActive = true,
                            MenuId = new Guid("644c7ce5-7aa4-4ac6-b7b0-354de647dda2"),
                            PermissionId = new Guid("148b78f5-ac2e-482b-aed1-513a7e28e687")
                        },
                        new
                        {
                            Id = new Guid("f4dbed84-b5c1-4d0b-a54a-a1a5f5964483"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1141),
                            IsActive = true,
                            MenuId = new Guid("644c7ce5-7aa4-4ac6-b7b0-354de647dda2"),
                            PermissionId = new Guid("9e993916-5805-4631-9a3a-5a06967e3ce9")
                        },
                        new
                        {
                            Id = new Guid("8663137a-6f62-46fa-aab4-191401fa3c11"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1339),
                            IsActive = true,
                            MenuId = new Guid("644c7ce5-7aa4-4ac6-b7b0-354de647dda2"),
                            PermissionId = new Guid("c6bd3bef-b40e-4011-87e7-d2653a14ee84")
                        },
                        new
                        {
                            Id = new Guid("a7458340-23ae-4acc-8609-c98f7d9ca149"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1473),
                            IsActive = true,
                            MenuId = new Guid("644c7ce5-7aa4-4ac6-b7b0-354de647dda2"),
                            PermissionId = new Guid("c3d55dc6-2d84-4da9-8842-50395832e12a")
                        },
                        new
                        {
                            Id = new Guid("28d17d54-4355-4ca5-9fbb-abacf86d1a63"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1618),
                            IsActive = true,
                            MenuId = new Guid("644c7ce5-7aa4-4ac6-b7b0-354de647dda2"),
                            PermissionId = new Guid("44b0151d-5680-4eb4-a68d-b1a67670a5c7")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1dc39abd-39b0-43f6-9253-78f0f2582d50"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 705, DateTimeKind.Local).AddTicks(6434),
                            IsActive = true,
                            PermissionId = new Guid("930a7eb7-3483-498d-b9d3-680f1763f245"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("1690f59d-8667-448d-b0c8-d647e64e305e"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(5830),
                            IsActive = true,
                            PermissionId = new Guid("6fccfd9c-43d3-4fb4-8717-5d34999b781c"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("b662eee4-1204-4e85-9319-deef8745d02d"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(6023),
                            IsActive = true,
                            PermissionId = new Guid("2d6ef6d4-ae00-4231-beea-7089e6a07f34"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("9c16de85-673e-4e28-9eb6-13a8e418480a"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(7285),
                            IsActive = true,
                            PermissionId = new Guid("8d560935-a636-4795-8520-1b58ca0100fd"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("c469943c-1996-487e-8d14-fdb67a0007af"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(7472),
                            IsActive = true,
                            PermissionId = new Guid("e081d3e6-974d-45e9-8776-c6c8a4d943a6"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("5e5de17b-3449-4002-a349-b82217512918"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(619),
                            IsActive = true,
                            PermissionId = new Guid("403232fa-852c-41cc-bcb1-aff5e0749d9e"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("3a9a663a-04df-46a4-8e06-a33dd8fd9cb8"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(766),
                            IsActive = true,
                            PermissionId = new Guid("1929c157-9e31-42da-af8a-f0c3b27d0c96"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("d9e08963-763e-4e0d-8c84-54a922acb4ce"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1025),
                            IsActive = true,
                            PermissionId = new Guid("148b78f5-ac2e-482b-aed1-513a7e28e687"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("65cdb58e-8f1f-4a42-8d12-ce470b187dc5"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1165),
                            IsActive = true,
                            PermissionId = new Guid("9e993916-5805-4631-9a3a-5a06967e3ce9"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("4b679c9e-1cfc-40c0-a66e-e3591bc19807"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1362),
                            IsActive = true,
                            PermissionId = new Guid("c6bd3bef-b40e-4011-87e7-d2653a14ee84"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("b12b98d3-9889-4598-bcb9-25b5b14fc755"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1496),
                            IsActive = true,
                            PermissionId = new Guid("c3d55dc6-2d84-4da9-8842-50395832e12a"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        },
                        new
                        {
                            Id = new Guid("cc0585ab-1d9a-4382-be4a-89feeb806614"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1644),
                            IsActive = true,
                            PermissionId = new Guid("44b0151d-5680-4eb4-a68d-b1a67670a5c7"),
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d19a3427-7d93-49c0-bcec-94e495f9b10e"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 701, DateTimeKind.Local).AddTicks(6601),
                            IsActive = true,
                            RoleId = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4"),
                            UserId = new Guid("dccc38ad-5cc2-4ad6-b7b7-4d5473504438")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("58a89202-d09f-4d17-bf6e-f22d5aaa8ed7"),
                            ControllerName = "ExceptionLog",
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 704, DateTimeKind.Local).AddTicks(869),
                            DisplayInMenu = true,
                            DisplayName = "Exception Log",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("e5d70c31-13b7-4d81-8667-cc66d1db74f2"),
                            ControllerName = "Role",
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(4682),
                            DisplayInMenu = true,
                            DisplayName = "Role Management",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("644c7ce5-7aa4-4ac6-b7b0-354de647dda2"),
                            ControllerName = "User",
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(9875),
                            DisplayInMenu = true,
                            DisplayName = "User Management",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.PasswordReset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PasswordResets");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("DisplayInPermissionTree")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("930a7eb7-3483-498d-b9d3-680f1763f245"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 704, DateTimeKind.Local).AddTicks(9671),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("6fccfd9c-43d3-4fb4-8717-5d34999b781c"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(5612),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("2d6ef6d4-ae00-4231-beea-7089e6a07f34"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(5954),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("8d560935-a636-4795-8520-1b58ca0100fd"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(7173),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Delete",
                            IsActive = true,
                            MethodName = "Delete"
                        },
                        new
                        {
                            Id = new Guid("e081d3e6-974d-45e9-8776-c6c8a4d943a6"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 708, DateTimeKind.Local).AddTicks(7374),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("403232fa-852c-41cc-bcb1-aff5e0749d9e"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(530),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Active User List",
                            IsActive = true,
                            MethodName = "ActiveList"
                        },
                        new
                        {
                            Id = new Guid("1929c157-9e31-42da-af8a-f0c3b27d0c96"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(698),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deactivated User List",
                            IsActive = true,
                            MethodName = "DeactivatedList"
                        },
                        new
                        {
                            Id = new Guid("148b78f5-ac2e-482b-aed1-513a7e28e687"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(956),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("9e993916-5805-4631-9a3a-5a06967e3ce9"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1100),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deactivate",
                            IsActive = true,
                            MethodName = "Deactivate"
                        },
                        new
                        {
                            Id = new Guid("c6bd3bef-b40e-4011-87e7-d2653a14ee84"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1299),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Restore",
                            IsActive = true,
                            MethodName = "Restore"
                        },
                        new
                        {
                            Id = new Guid("c3d55dc6-2d84-4da9-8842-50395832e12a"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1435),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("44b0151d-5680-4eb4-a68d-b1a67670a5c7"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 709, DateTimeKind.Local).AddTicks(1586),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Delete",
                            IsActive = true,
                            MethodName = "Delete"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db8f768e-a9ee-4242-97e3-bb260491e9d4"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 689, DateTimeKind.Local).AddTicks(7484),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dccc38ad-5cc2-4ad6-b7b7-4d5473504438"),
                            CreatedDate = new DateTime(2020, 10, 13, 0, 49, 34, 701, DateTimeKind.Local).AddTicks(4751),
                            Email = "admin",
                            IsActive = true,
                            Name = "admin",
                            Password = "D666+2ai9e6AyaRseO19bA==",
                            Surname = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
