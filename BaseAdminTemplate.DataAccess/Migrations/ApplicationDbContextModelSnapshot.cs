// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76baab96-3592-4df0-b769-f62f7555e39f"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 128, DateTimeKind.Local).AddTicks(8846),
                            IsActive = true,
                            MenuId = new Guid("5fd17086-7645-4c49-8a52-37974b56b0a8"),
                            PermissionId = new Guid("2675806c-1f9b-42de-8eb5-e09f502a51ab")
                        },
                        new
                        {
                            Id = new Guid("730cd380-9610-46c2-851f-a9d666a0ef5c"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(8028),
                            IsActive = true,
                            MenuId = new Guid("c99508ca-fb4b-4cdc-aaa3-ddfc6d6ce359"),
                            PermissionId = new Guid("3130830d-7fa7-4b36-b560-2fefe8780a15")
                        },
                        new
                        {
                            Id = new Guid("a3bdf4dd-3144-4a3a-aae0-db02f0ad08a6"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(8260),
                            IsActive = true,
                            MenuId = new Guid("c99508ca-fb4b-4cdc-aaa3-ddfc6d6ce359"),
                            PermissionId = new Guid("c0586433-9b1f-400b-9956-324bd04cfe9f")
                        },
                        new
                        {
                            Id = new Guid("ddfd8325-0d64-4c93-86cf-1bb56f268530"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(9390),
                            IsActive = true,
                            MenuId = new Guid("c99508ca-fb4b-4cdc-aaa3-ddfc6d6ce359"),
                            PermissionId = new Guid("25b21837-0005-49da-94c5-fcff6f8c6413")
                        },
                        new
                        {
                            Id = new Guid("b657b1ba-545f-4031-a073-b3b7ed1161b6"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(9548),
                            IsActive = true,
                            MenuId = new Guid("c99508ca-fb4b-4cdc-aaa3-ddfc6d6ce359"),
                            PermissionId = new Guid("ca5e2dd4-3a1d-463b-a1f8-164bba640e64")
                        },
                        new
                        {
                            Id = new Guid("1bb156ee-7a3b-4fc3-b144-872610b9ef79"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(2772),
                            IsActive = true,
                            MenuId = new Guid("116253b8-9a6e-4df7-99e2-1205d10dc188"),
                            PermissionId = new Guid("da8dcc35-d6ad-4b9e-aa99-dbb4af419d6d")
                        },
                        new
                        {
                            Id = new Guid("c0298f18-c3a7-4fc8-a5ba-86f7dc134377"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(2924),
                            IsActive = true,
                            MenuId = new Guid("116253b8-9a6e-4df7-99e2-1205d10dc188"),
                            PermissionId = new Guid("6c8e9dcb-cf4b-4e75-a62b-2926ba96c270")
                        },
                        new
                        {
                            Id = new Guid("82e7de40-7e6c-4cd7-86e3-b730286bc746"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3252),
                            IsActive = true,
                            MenuId = new Guid("116253b8-9a6e-4df7-99e2-1205d10dc188"),
                            PermissionId = new Guid("0b3159b2-8982-4f98-8249-01f097a77cc6")
                        },
                        new
                        {
                            Id = new Guid("018c94ce-9e7d-4a70-bb2b-becfefa0102a"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3493),
                            IsActive = true,
                            MenuId = new Guid("116253b8-9a6e-4df7-99e2-1205d10dc188"),
                            PermissionId = new Guid("3dacb97a-197b-4a85-b602-c0f90ec20a4e")
                        },
                        new
                        {
                            Id = new Guid("8e3f227f-1141-4d8c-93c9-477239dd22c9"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3633),
                            IsActive = true,
                            MenuId = new Guid("116253b8-9a6e-4df7-99e2-1205d10dc188"),
                            PermissionId = new Guid("9841fb9c-6932-4ac5-ae63-3d995976d822")
                        },
                        new
                        {
                            Id = new Guid("649d961a-ce79-4791-a544-7c86fd3fa1c6"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3766),
                            IsActive = true,
                            MenuId = new Guid("116253b8-9a6e-4df7-99e2-1205d10dc188"),
                            PermissionId = new Guid("9c7a0f97-624d-44ae-adc8-d52a940a5e0c")
                        },
                        new
                        {
                            Id = new Guid("995515b9-7503-4b1f-8582-b1cc4ae685bc"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3982),
                            IsActive = true,
                            MenuId = new Guid("116253b8-9a6e-4df7-99e2-1205d10dc188"),
                            PermissionId = new Guid("7757797d-bb42-4b06-9857-559a717a0050")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb16f0c1-5290-4c26-8f6d-ee28156cf077"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 129, DateTimeKind.Local).AddTicks(806),
                            IsActive = true,
                            PermissionId = new Guid("2675806c-1f9b-42de-8eb5-e09f502a51ab"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("f47d9ee0-4ddf-4dbd-93fe-943ca473a940"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(8092),
                            IsActive = true,
                            PermissionId = new Guid("3130830d-7fa7-4b36-b560-2fefe8780a15"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("d90cc3ad-77aa-46c8-a8c2-1ab851d1acec"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(8286),
                            IsActive = true,
                            PermissionId = new Guid("c0586433-9b1f-400b-9956-324bd04cfe9f"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("54071516-f4cd-44e6-a542-fb6666ac87ef"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(9417),
                            IsActive = true,
                            PermissionId = new Guid("25b21837-0005-49da-94c5-fcff6f8c6413"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("7d033df2-82b6-49dd-9126-395ed9a7e010"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(9573),
                            IsActive = true,
                            PermissionId = new Guid("ca5e2dd4-3a1d-463b-a1f8-164bba640e64"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("a5cbe94a-7aa6-4f5e-b078-2e0eb48d1bb5"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(2804),
                            IsActive = true,
                            PermissionId = new Guid("da8dcc35-d6ad-4b9e-aa99-dbb4af419d6d"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("bdbe20ad-04b7-4834-95d2-01cc8d37ceac"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(2947),
                            IsActive = true,
                            PermissionId = new Guid("6c8e9dcb-cf4b-4e75-a62b-2926ba96c270"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("21bcd498-8af9-40bb-a4ad-53e9d23712e5"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3332),
                            IsActive = true,
                            PermissionId = new Guid("0b3159b2-8982-4f98-8249-01f097a77cc6"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("77edef01-738f-4dec-92e2-4337387384c2"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3520),
                            IsActive = true,
                            PermissionId = new Guid("3dacb97a-197b-4a85-b602-c0f90ec20a4e"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("c4a8a4c1-5939-4f8e-baf5-8aadf63e26eb"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3656),
                            IsActive = true,
                            PermissionId = new Guid("9841fb9c-6932-4ac5-ae63-3d995976d822"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("95dc93ad-b52f-4d7b-b51b-8f8473e2e5d7"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3789),
                            IsActive = true,
                            PermissionId = new Guid("9c7a0f97-624d-44ae-adc8-d52a940a5e0c"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        },
                        new
                        {
                            Id = new Guid("59dd00e6-e581-4449-b5cc-f1bc6c551acb"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(4005),
                            IsActive = true,
                            PermissionId = new Guid("7757797d-bb42-4b06-9857-559a717a0050"),
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22715a65-9f0d-446f-bc35-ac7ce6f7d4f4"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 126, DateTimeKind.Local).AddTicks(68),
                            IsActive = true,
                            RoleId = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9"),
                            UserId = new Guid("23a92a78-1077-4913-ac2d-666c6836406c")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5fd17086-7645-4c49-8a52-37974b56b0a8"),
                            ControllerName = "ExceptionLog",
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 127, DateTimeKind.Local).AddTicks(7206),
                            DisplayInMenu = true,
                            DisplayName = "Hata Kayıtları",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("c99508ca-fb4b-4cdc-aaa3-ddfc6d6ce359"),
                            ControllerName = "Role",
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(6720),
                            DisplayInMenu = true,
                            DisplayName = "Rol Yönetimi",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("116253b8-9a6e-4df7-99e2-1205d10dc188"),
                            ControllerName = "User",
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(2031),
                            DisplayInMenu = true,
                            DisplayName = "Kullanıcı Yönetimi",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.PasswordReset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PasswordResets");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("DisplayInPermissionTree")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2675806c-1f9b-42de-8eb5-e09f502a51ab"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 128, DateTimeKind.Local).AddTicks(5073),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Listele",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("3130830d-7fa7-4b36-b560-2fefe8780a15"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(7889),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Listele",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("c0586433-9b1f-400b-9956-324bd04cfe9f"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(8219),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Ekle",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("25b21837-0005-49da-94c5-fcff6f8c6413"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(9307),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Sil",
                            IsActive = true,
                            MethodName = "Delete"
                        },
                        new
                        {
                            Id = new Guid("ca5e2dd4-3a1d-463b-a1f8-164bba640e64"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 131, DateTimeKind.Local).AddTicks(9495),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Güncelle",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("da8dcc35-d6ad-4b9e-aa99-dbb4af419d6d"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(2708),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Aktif Kullanıcı Listesi",
                            IsActive = true,
                            MethodName = "ActiveList"
                        },
                        new
                        {
                            Id = new Guid("6c8e9dcb-cf4b-4e75-a62b-2926ba96c270"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(2885),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deaktif Kullanıcı Listesi",
                            IsActive = true,
                            MethodName = "DeactivatedList"
                        },
                        new
                        {
                            Id = new Guid("0b3159b2-8982-4f98-8249-01f097a77cc6"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3202),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Güncelle",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("3dacb97a-197b-4a85-b602-c0f90ec20a4e"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3444),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deaktif Yap",
                            IsActive = true,
                            MethodName = "Deactivate"
                        },
                        new
                        {
                            Id = new Guid("9841fb9c-6932-4ac5-ae63-3d995976d822"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3596),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Kurtar",
                            IsActive = true,
                            MethodName = "Restore"
                        },
                        new
                        {
                            Id = new Guid("9c7a0f97-624d-44ae-adc8-d52a940a5e0c"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3728),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Ekle",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("7757797d-bb42-4b06-9857-559a717a0050"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 132, DateTimeKind.Local).AddTicks(3945),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Sil",
                            IsActive = true,
                            MethodName = "Delete"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e9113cb-a2e5-4083-90f3-7aa6a26670e9"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 114, DateTimeKind.Local).AddTicks(7189),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23a92a78-1077-4913-ac2d-666c6836406c"),
                            CreatedDate = new DateTime(2020, 10, 13, 16, 4, 45, 125, DateTimeKind.Local).AddTicks(8751),
                            Email = "admin",
                            IsActive = true,
                            Name = "admin",
                            Password = "D666+2ai9e6AyaRseO19bA==",
                            Surname = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
