// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6dd7107d-9765-4e52-b00d-a80aef132f70"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 109, DateTimeKind.Local).AddTicks(1018),
                            IsActive = true,
                            MenuId = new Guid("3da28c59-0674-48a8-a9d5-b049ccf34041"),
                            PermissionId = new Guid("3c9eb0c7-963c-4860-b543-cd60737688c5")
                        },
                        new
                        {
                            Id = new Guid("3f53d768-7f50-4b37-8d9e-e0b5418afe94"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(703),
                            IsActive = true,
                            MenuId = new Guid("f0c0b6e4-df49-4a3a-99b2-6e8a68ae4f87"),
                            PermissionId = new Guid("c0fdd95d-6070-4801-99ff-1c0d450d4443")
                        },
                        new
                        {
                            Id = new Guid("52f91d25-a4ad-4f3f-b63e-8f8348a3e9db"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(1198),
                            IsActive = true,
                            MenuId = new Guid("f0c0b6e4-df49-4a3a-99b2-6e8a68ae4f87"),
                            PermissionId = new Guid("1150c590-9510-44fb-b983-8384625c9eba")
                        },
                        new
                        {
                            Id = new Guid("0b145c94-830a-4b32-b451-f345544cc5e7"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(4580),
                            IsActive = true,
                            MenuId = new Guid("f0c0b6e4-df49-4a3a-99b2-6e8a68ae4f87"),
                            PermissionId = new Guid("55e7ac34-fee4-460a-8f04-e32bcb1b365a")
                        },
                        new
                        {
                            Id = new Guid("a4de9ac9-fd27-4462-a460-d9bcb4c3d308"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(5001),
                            IsActive = true,
                            MenuId = new Guid("f0c0b6e4-df49-4a3a-99b2-6e8a68ae4f87"),
                            PermissionId = new Guid("689fb0c7-583d-4ece-b1fe-4c6e861ce8b1")
                        },
                        new
                        {
                            Id = new Guid("eb57e394-e3c3-459f-8670-44856bdd1485"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(1654),
                            IsActive = true,
                            MenuId = new Guid("9ad20195-5cac-41b7-8436-ea4237a42cd2"),
                            PermissionId = new Guid("281f7f51-bd43-407b-82ac-a54a2839dbd6")
                        },
                        new
                        {
                            Id = new Guid("9134537d-103c-4432-a939-c9217fdeca93"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(1952),
                            IsActive = true,
                            MenuId = new Guid("9ad20195-5cac-41b7-8436-ea4237a42cd2"),
                            PermissionId = new Guid("039bd732-bfd0-4ff8-be9c-e43d842afab7")
                        },
                        new
                        {
                            Id = new Guid("e674010a-f7b5-4e31-8374-e0a8a1fb5646"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(2550),
                            IsActive = true,
                            MenuId = new Guid("9ad20195-5cac-41b7-8436-ea4237a42cd2"),
                            PermissionId = new Guid("46c434e2-145c-48e7-a740-62cd0a6dabe4")
                        },
                        new
                        {
                            Id = new Guid("7719d471-def1-446a-8567-b407a31608f1"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(2846),
                            IsActive = true,
                            MenuId = new Guid("9ad20195-5cac-41b7-8436-ea4237a42cd2"),
                            PermissionId = new Guid("9833008c-fc4d-4eb3-a939-ab1c53676f5f")
                        },
                        new
                        {
                            Id = new Guid("a6a342d5-5f56-4d66-9e50-27c02750413c"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3383),
                            IsActive = true,
                            MenuId = new Guid("9ad20195-5cac-41b7-8436-ea4237a42cd2"),
                            PermissionId = new Guid("715a2eac-7bd6-48da-b9a6-62f933052100")
                        },
                        new
                        {
                            Id = new Guid("0e13c03a-5fc8-40b4-8f84-55fdcbf261da"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3638),
                            IsActive = true,
                            MenuId = new Guid("9ad20195-5cac-41b7-8436-ea4237a42cd2"),
                            PermissionId = new Guid("062308e0-f82b-48fb-aa1e-8fd64a1077f6")
                        },
                        new
                        {
                            Id = new Guid("2eb2a6d8-da65-48f5-9ee0-1ca5858eb3b6"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3941),
                            IsActive = true,
                            MenuId = new Guid("9ad20195-5cac-41b7-8436-ea4237a42cd2"),
                            PermissionId = new Guid("92628df5-0c29-482b-baa2-02992ba67742")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4dd92f80-c998-49c6-bbef-2e038456cd64"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 109, DateTimeKind.Local).AddTicks(4478),
                            IsActive = true,
                            PermissionId = new Guid("3c9eb0c7-963c-4860-b543-cd60737688c5"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("8c2aab10-e0ee-40bb-98b8-72fffa723e4d"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(852),
                            IsActive = true,
                            PermissionId = new Guid("c0fdd95d-6070-4801-99ff-1c0d450d4443"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("5a89a23e-de5c-4f93-aca8-16c0f22652e4"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(1240),
                            IsActive = true,
                            PermissionId = new Guid("1150c590-9510-44fb-b983-8384625c9eba"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("3f8f7728-a3aa-43e7-aa49-5857620b6e87"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(4658),
                            IsActive = true,
                            PermissionId = new Guid("55e7ac34-fee4-460a-8f04-e32bcb1b365a"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("832826bb-8a9f-4825-9f20-be3255cd1f1c"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(5054),
                            IsActive = true,
                            PermissionId = new Guid("689fb0c7-583d-4ece-b1fe-4c6e861ce8b1"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("3d9cd1c2-76f9-419e-98a3-e67bb6941543"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(1708),
                            IsActive = true,
                            PermissionId = new Guid("281f7f51-bd43-407b-82ac-a54a2839dbd6"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("2be4c772-37a4-487c-8d6f-5b0369d3b8f6"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(1995),
                            IsActive = true,
                            PermissionId = new Guid("039bd732-bfd0-4ff8-be9c-e43d842afab7"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("85fc675a-374d-4224-b77a-9f23780aa0ee"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(2595),
                            IsActive = true,
                            PermissionId = new Guid("46c434e2-145c-48e7-a740-62cd0a6dabe4"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("4392cd70-3722-478e-89ec-a072e6053c4d"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(2891),
                            IsActive = true,
                            PermissionId = new Guid("9833008c-fc4d-4eb3-a939-ab1c53676f5f"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("f7372f2d-57d6-417e-ac8f-8e4fd6ff9da5"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3427),
                            IsActive = true,
                            PermissionId = new Guid("715a2eac-7bd6-48da-b9a6-62f933052100"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("0f9021c0-a621-48cc-80f8-983463ae3703"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3684),
                            IsActive = true,
                            PermissionId = new Guid("062308e0-f82b-48fb-aa1e-8fd64a1077f6"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        },
                        new
                        {
                            Id = new Guid("3805f014-c2ee-4827-9003-bbd0245fe297"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3983),
                            IsActive = true,
                            PermissionId = new Guid("92628df5-0c29-482b-baa2-02992ba67742"),
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("332166ad-966b-4c60-858a-b761c8c4f667"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 105, DateTimeKind.Local).AddTicks(5321),
                            IsActive = true,
                            RoleId = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface"),
                            UserId = new Guid("846bbff5-9675-432a-8102-99f6e3762d5d")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3da28c59-0674-48a8-a9d5-b049ccf34041"),
                            ControllerName = "ExceptionLog",
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 107, DateTimeKind.Local).AddTicks(7687),
                            DisplayInMenu = true,
                            DisplayName = "Hata Kayıtları",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("f0c0b6e4-df49-4a3a-99b2-6e8a68ae4f87"),
                            ControllerName = "Role",
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 112, DateTimeKind.Local).AddTicks(7701),
                            DisplayInMenu = true,
                            DisplayName = "Rol Yönetimi",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("9ad20195-5cac-41b7-8436-ea4237a42cd2"),
                            ControllerName = "User",
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(9814),
                            DisplayInMenu = true,
                            DisplayName = "Kullanıcı Yönetimi",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.PasswordReset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PasswordResets");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("DisplayInPermissionTree")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c9eb0c7-963c-4860-b543-cd60737688c5"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 108, DateTimeKind.Local).AddTicks(6385),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Listele",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("c0fdd95d-6070-4801-99ff-1c0d450d4443"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(318),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Listele",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("1150c590-9510-44fb-b983-8384625c9eba"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(1117),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Ekle",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("55e7ac34-fee4-460a-8f04-e32bcb1b365a"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(4401),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Sil",
                            IsActive = true,
                            MethodName = "Delete"
                        },
                        new
                        {
                            Id = new Guid("689fb0c7-583d-4ece-b1fe-4c6e861ce8b1"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 113, DateTimeKind.Local).AddTicks(4881),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Güncelle",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("281f7f51-bd43-407b-82ac-a54a2839dbd6"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(1479),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Aktif Kullanıcı Listesi",
                            IsActive = true,
                            MethodName = "ActiveList"
                        },
                        new
                        {
                            Id = new Guid("039bd732-bfd0-4ff8-be9c-e43d842afab7"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(1876),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deaktif Kullanıcı Listesi",
                            IsActive = true,
                            MethodName = "DeactivatedList"
                        },
                        new
                        {
                            Id = new Guid("46c434e2-145c-48e7-a740-62cd0a6dabe4"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(2435),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Güncelle",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("9833008c-fc4d-4eb3-a939-ab1c53676f5f"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(2760),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deaktif Yap",
                            IsActive = true,
                            MethodName = "Deactivate"
                        },
                        new
                        {
                            Id = new Guid("715a2eac-7bd6-48da-b9a6-62f933052100"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3291),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Kurtar",
                            IsActive = true,
                            MethodName = "Restore"
                        },
                        new
                        {
                            Id = new Guid("062308e0-f82b-48fb-aa1e-8fd64a1077f6"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3576),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Ekle",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("92628df5-0c29-482b-baa2-02992ba67742"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 114, DateTimeKind.Local).AddTicks(3872),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Sil",
                            IsActive = true,
                            MethodName = "Delete"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae65f69f-f797-44c2-bbbb-70f7896cface"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 78, DateTimeKind.Local).AddTicks(8686),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("846bbff5-9675-432a-8102-99f6e3762d5d"),
                            CreatedDate = new DateTime(2020, 10, 13, 2, 59, 32, 105, DateTimeKind.Local).AddTicks(2836),
                            Email = "admin",
                            IsActive = true,
                            Name = "admin",
                            Password = "D666+2ai9e6AyaRseO19bA==",
                            Surname = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
