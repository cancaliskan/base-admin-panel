// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("778e6267-6983-47f9-9559-3e840881af64"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 652, DateTimeKind.Local).AddTicks(2253),
                            IsActive = true,
                            MenuId = new Guid("24cda74c-5c4e-4d20-b726-6f1ecff7c026"),
                            PermissionId = new Guid("172b12f4-1a00-4d9c-afaf-efbf098f4d35")
                        },
                        new
                        {
                            Id = new Guid("8d9da8f2-80c5-425d-9cf5-0a22a73f48c4"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(2007),
                            IsActive = true,
                            MenuId = new Guid("a758e699-93bc-4461-abaf-7c8bfebed2df"),
                            PermissionId = new Guid("55b7168f-79ad-4e15-857d-2b741bbd5ad6")
                        },
                        new
                        {
                            Id = new Guid("cf963040-aade-4e0d-b1bc-eebeba55fa9f"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(2398),
                            IsActive = true,
                            MenuId = new Guid("a758e699-93bc-4461-abaf-7c8bfebed2df"),
                            PermissionId = new Guid("850785ea-257c-42b2-b870-28f780a022bd")
                        },
                        new
                        {
                            Id = new Guid("4ab6c38d-70bc-4ee2-a3d6-b23d544512dd"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(5709),
                            IsActive = true,
                            MenuId = new Guid("a758e699-93bc-4461-abaf-7c8bfebed2df"),
                            PermissionId = new Guid("83bb92d7-67d1-4d60-836d-3eb7d3a8f044")
                        },
                        new
                        {
                            Id = new Guid("dfcb16b1-86fd-42fa-ad5e-a204e08eedde"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(6286),
                            IsActive = true,
                            MenuId = new Guid("a758e699-93bc-4461-abaf-7c8bfebed2df"),
                            PermissionId = new Guid("a50bf3d2-fe25-4472-a08b-ed4e1857875f")
                        },
                        new
                        {
                            Id = new Guid("8f0381ea-c0e3-46f6-ab18-297660c7e76d"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(4697),
                            IsActive = true,
                            MenuId = new Guid("bb650e90-d95d-4c99-a302-6c7f8fc88e3c"),
                            PermissionId = new Guid("8b2b8312-25d4-4f36-8353-c627371e3736")
                        },
                        new
                        {
                            Id = new Guid("b4f7cdf1-d25c-4930-9bad-f02dc3110f69"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(5147),
                            IsActive = true,
                            MenuId = new Guid("bb650e90-d95d-4c99-a302-6c7f8fc88e3c"),
                            PermissionId = new Guid("1cc2d977-8d74-474c-ad15-7273c0e2ccbb")
                        },
                        new
                        {
                            Id = new Guid("0fa5966a-3cae-4a18-9a0c-bddf6d3d2826"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(5881),
                            IsActive = true,
                            MenuId = new Guid("bb650e90-d95d-4c99-a302-6c7f8fc88e3c"),
                            PermissionId = new Guid("344c4e45-e265-46d5-b281-e5eefe507352")
                        },
                        new
                        {
                            Id = new Guid("d1dbc0cc-f7a2-4e6f-9a58-3fead6cd7d6c"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(6259),
                            IsActive = true,
                            MenuId = new Guid("bb650e90-d95d-4c99-a302-6c7f8fc88e3c"),
                            PermissionId = new Guid("f31e1296-82a5-48a8-bb43-ad5b10257992")
                        },
                        new
                        {
                            Id = new Guid("f7898737-f26d-4768-bba3-266715e5e032"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(6583),
                            IsActive = true,
                            MenuId = new Guid("bb650e90-d95d-4c99-a302-6c7f8fc88e3c"),
                            PermissionId = new Guid("3653cd3a-3362-4c03-ad41-b858ef091e3b")
                        },
                        new
                        {
                            Id = new Guid("bb4b1c91-bb5d-4bb1-b34b-b88d6057db28"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(7090),
                            IsActive = true,
                            MenuId = new Guid("bb650e90-d95d-4c99-a302-6c7f8fc88e3c"),
                            PermissionId = new Guid("2809fb83-e3f7-4794-a24c-95ac7bf2019c")
                        },
                        new
                        {
                            Id = new Guid("65879978-9a51-42d1-9d97-ea5c11743e2a"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(7529),
                            IsActive = true,
                            MenuId = new Guid("bb650e90-d95d-4c99-a302-6c7f8fc88e3c"),
                            PermissionId = new Guid("69bf3244-96a4-4d0b-8c5d-4b1f22a3649d")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6288f6f3-0fbd-4e7d-adf9-d44b5ee22162"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 652, DateTimeKind.Local).AddTicks(5797),
                            IsActive = true,
                            PermissionId = new Guid("172b12f4-1a00-4d9c-afaf-efbf098f4d35"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("91f89cd6-2585-4c1f-adef-9990116a7e8f"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(2108),
                            IsActive = true,
                            PermissionId = new Guid("55b7168f-79ad-4e15-857d-2b741bbd5ad6"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("ac961d1c-49ac-4532-8614-4d105fe855cb"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(2463),
                            IsActive = true,
                            PermissionId = new Guid("850785ea-257c-42b2-b870-28f780a022bd"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("02ff6bad-500c-4803-b938-8bdc3d8a90bb"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(5792),
                            IsActive = true,
                            PermissionId = new Guid("83bb92d7-67d1-4d60-836d-3eb7d3a8f044"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("b549ddb4-3e97-4538-9ea4-9f707689d402"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(6359),
                            IsActive = true,
                            PermissionId = new Guid("a50bf3d2-fe25-4472-a08b-ed4e1857875f"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("8e0a1122-b0ef-487a-b4d2-6f26217e6d87"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(4790),
                            IsActive = true,
                            PermissionId = new Guid("8b2b8312-25d4-4f36-8353-c627371e3736"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("bd5d12c3-0798-4cae-99ea-0041b136e724"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(5212),
                            IsActive = true,
                            PermissionId = new Guid("1cc2d977-8d74-474c-ad15-7273c0e2ccbb"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("8906d8bd-bbcb-42ac-86c2-ac7304c7f198"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(5964),
                            IsActive = true,
                            PermissionId = new Guid("344c4e45-e265-46d5-b281-e5eefe507352"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("d138d659-1434-4438-a39f-e4072d040ab0"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(6335),
                            IsActive = true,
                            PermissionId = new Guid("f31e1296-82a5-48a8-bb43-ad5b10257992"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("e18816b9-7a21-4752-b365-9118b9d9386a"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(6645),
                            IsActive = true,
                            PermissionId = new Guid("3653cd3a-3362-4c03-ad41-b858ef091e3b"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("67b51963-7805-4bb0-9707-5ac89ed97e66"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(7166),
                            IsActive = true,
                            PermissionId = new Guid("2809fb83-e3f7-4794-a24c-95ac7bf2019c"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        },
                        new
                        {
                            Id = new Guid("679d7484-86c0-4d75-a03c-56221c7fff73"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(7591),
                            IsActive = true,
                            PermissionId = new Guid("69bf3244-96a4-4d0b-8c5d-4b1f22a3649d"),
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33011507-c68b-4c62-9bff-993349e45c31"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 647, DateTimeKind.Local).AddTicks(3290),
                            IsActive = true,
                            RoleId = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260"),
                            UserId = new Guid("6f2b5efd-2e83-4b6e-b28b-7be3c58018ac")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24cda74c-5c4e-4d20-b726-6f1ecff7c026"),
                            ControllerName = "ExceptionLog",
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 650, DateTimeKind.Local).AddTicks(2440),
                            DisplayInMenu = true,
                            DisplayName = "Exception Log",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("a758e699-93bc-4461-abaf-7c8bfebed2df"),
                            ControllerName = "Role",
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(232),
                            DisplayInMenu = true,
                            DisplayName = "Role Management",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("bb650e90-d95d-4c99-a302-6c7f8fc88e3c"),
                            ControllerName = "User",
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(3077),
                            DisplayInMenu = true,
                            DisplayName = "User Management",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("DisplayInPermissionTree")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("172b12f4-1a00-4d9c-afaf-efbf098f4d35"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 651, DateTimeKind.Local).AddTicks(5727),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("55b7168f-79ad-4e15-857d-2b741bbd5ad6"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(1783),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("850785ea-257c-42b2-b870-28f780a022bd"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(2324),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("83bb92d7-67d1-4d60-836d-3eb7d3a8f044"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(5454),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Delete",
                            IsActive = true,
                            MethodName = "Delete"
                        },
                        new
                        {
                            Id = new Guid("a50bf3d2-fe25-4472-a08b-ed4e1857875f"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 658, DateTimeKind.Local).AddTicks(6144),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("8b2b8312-25d4-4f36-8353-c627371e3736"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(4556),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Active User List",
                            IsActive = true,
                            MethodName = "ActiveList"
                        },
                        new
                        {
                            Id = new Guid("1cc2d977-8d74-474c-ad15-7273c0e2ccbb"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(4982),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deactivated User List",
                            IsActive = true,
                            MethodName = "DeactivatedList"
                        },
                        new
                        {
                            Id = new Guid("344c4e45-e265-46d5-b281-e5eefe507352"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(5753),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("f31e1296-82a5-48a8-bb43-ad5b10257992"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(6156),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deactivate",
                            IsActive = true,
                            MethodName = "Deactivate"
                        },
                        new
                        {
                            Id = new Guid("3653cd3a-3362-4c03-ad41-b858ef091e3b"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(6489),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Restore",
                            IsActive = true,
                            MethodName = "Restore"
                        },
                        new
                        {
                            Id = new Guid("2809fb83-e3f7-4794-a24c-95ac7bf2019c"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(6843),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("69bf3244-96a4-4d0b-8c5d-4b1f22a3649d"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 659, DateTimeKind.Local).AddTicks(7446),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Delete",
                            IsActive = true,
                            MethodName = "Delete"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f436e5a1-7a8c-43c1-b897-b5578369f260"),
                            CreatedDate = new DateTime(2020, 10, 11, 23, 48, 29, 627, DateTimeKind.Local).AddTicks(6409),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f2b5efd-2e83-4b6e-b28b-7be3c58018ac"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedDate = new DateTime(2020, 10, 11, 23, 48, 29, 647, DateTimeKind.Local).AddTicks(684),
                            Email = "admin",
                            IsActive = true,
                            Name = "admin",
                            Password = "Wwlcbhd88rv7mPvoS/02V4SVgun5TXSgyN3kVyVd9FY=",
                            Surname = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
