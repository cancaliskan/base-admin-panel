// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2716bd0e-8def-44f6-80d3-ab90bf605f30"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 784, DateTimeKind.Local).AddTicks(7972),
                            IsActive = true,
                            MenuId = new Guid("bd2090f9-d3c9-438c-b3ad-7ae9acd119ff"),
                            PermissionId = new Guid("0c3f85c8-1a31-47be-b8be-9a5c2dea62c9")
                        },
                        new
                        {
                            Id = new Guid("1949a59b-18c6-4339-a728-ec4387ee9294"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 785, DateTimeKind.Local).AddTicks(2521),
                            IsActive = true,
                            MenuId = new Guid("bd2090f9-d3c9-438c-b3ad-7ae9acd119ff"),
                            PermissionId = new Guid("76e64889-ece8-4523-90ce-f48dc7b72c68")
                        },
                        new
                        {
                            Id = new Guid("299f9cbd-157f-49a0-aee5-637e6e5aab54"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 786, DateTimeKind.Local).AddTicks(684),
                            IsActive = true,
                            MenuId = new Guid("bd2090f9-d3c9-438c-b3ad-7ae9acd119ff"),
                            PermissionId = new Guid("d525ac88-a2b0-4dc9-8097-0d0c08ad17ef")
                        },
                        new
                        {
                            Id = new Guid("7d3c1819-d093-40dd-9b90-8e8a45170600"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 786, DateTimeKind.Local).AddTicks(1206),
                            IsActive = true,
                            MenuId = new Guid("bd2090f9-d3c9-438c-b3ad-7ae9acd119ff"),
                            PermissionId = new Guid("89b2ba41-9acf-42bf-a3bf-f2249be72f69")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c202cb51-e7d1-4dd4-959e-47614dd8c9d8"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 785, DateTimeKind.Local).AddTicks(1252),
                            IsActive = true,
                            PermissionId = new Guid("0c3f85c8-1a31-47be-b8be-9a5c2dea62c9"),
                            RoleId = new Guid("f512ab28-fddc-4a7c-8e5f-aebf156e9182")
                        },
                        new
                        {
                            Id = new Guid("0e6e3a72-493a-4095-ab47-01d626906276"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 785, DateTimeKind.Local).AddTicks(2816),
                            IsActive = true,
                            PermissionId = new Guid("76e64889-ece8-4523-90ce-f48dc7b72c68"),
                            RoleId = new Guid("f512ab28-fddc-4a7c-8e5f-aebf156e9182")
                        },
                        new
                        {
                            Id = new Guid("f164315d-96e9-4d42-9504-e46a4377c81d"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 786, DateTimeKind.Local).AddTicks(746),
                            IsActive = true,
                            PermissionId = new Guid("d525ac88-a2b0-4dc9-8097-0d0c08ad17ef"),
                            RoleId = new Guid("f512ab28-fddc-4a7c-8e5f-aebf156e9182")
                        },
                        new
                        {
                            Id = new Guid("7bfe7924-4f9c-4f24-a22f-87dafc9c2017"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 786, DateTimeKind.Local).AddTicks(1258),
                            IsActive = true,
                            PermissionId = new Guid("89b2ba41-9acf-42bf-a3bf-f2249be72f69"),
                            RoleId = new Guid("f512ab28-fddc-4a7c-8e5f-aebf156e9182")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61bc689e-41c2-4622-b82e-9655f80fe3f8"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 780, DateTimeKind.Local).AddTicks(5573),
                            IsActive = true,
                            RoleId = new Guid("f512ab28-fddc-4a7c-8e5f-aebf156e9182"),
                            UserId = new Guid("909d3b29-3e2a-42f4-b4ef-1e27658af9db")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd2090f9-d3c9-438c-b3ad-7ae9acd119ff"),
                            ControllerName = "Role",
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 783, DateTimeKind.Local).AddTicks(589),
                            DisplayInMenu = true,
                            DisplayName = "Role Management",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("DisplayInPermissionTree")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c3f85c8-1a31-47be-b8be-9a5c2dea62c9"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 784, DateTimeKind.Local).AddTicks(2111),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("76e64889-ece8-4523-90ce-f48dc7b72c68"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 785, DateTimeKind.Local).AddTicks(2222),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("d525ac88-a2b0-4dc9-8097-0d0c08ad17ef"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 786, DateTimeKind.Local).AddTicks(362),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Delete",
                            IsActive = true,
                            MethodName = "Delete"
                        },
                        new
                        {
                            Id = new Guid("89b2ba41-9acf-42bf-a3bf-f2249be72f69"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 786, DateTimeKind.Local).AddTicks(1057),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f512ab28-fddc-4a7c-8e5f-aebf156e9182"),
                            CreatedDate = new DateTime(2020, 10, 9, 14, 22, 12, 763, DateTimeKind.Local).AddTicks(4060),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("909d3b29-3e2a-42f4-b4ef-1e27658af9db"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedDate = new DateTime(2020, 10, 9, 14, 22, 12, 780, DateTimeKind.Local).AddTicks(2563),
                            Email = "admin",
                            IsActive = true,
                            Name = "admin",
                            Password = "Zqp5ANxfZWm7EnLxFWg/9RuIWU8ZFy2TYVdVRTXw1Yo=",
                            Surname = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
