// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f7c994f-2e44-4b80-8a90-6d67dbb9c547"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(2858),
                            IsActive = true,
                            MenuId = new Guid("2460c8db-d314-4641-af03-967be6f30d90"),
                            PermissionId = new Guid("7dda5e32-be88-4518-b6f7-06acb3a1d19e")
                        },
                        new
                        {
                            Id = new Guid("4f392ad0-edde-4042-b928-22a73600563f"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(5493),
                            IsActive = true,
                            MenuId = new Guid("2460c8db-d314-4641-af03-967be6f30d90"),
                            PermissionId = new Guid("e077db56-7019-4565-a4c9-b0162d186edb")
                        },
                        new
                        {
                            Id = new Guid("d77fe8e2-d45c-4e1b-83ed-6efa7982cda0"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(6992),
                            IsActive = true,
                            MenuId = new Guid("2460c8db-d314-4641-af03-967be6f30d90"),
                            PermissionId = new Guid("519f1ec5-4345-4688-8a30-65238bd71787")
                        },
                        new
                        {
                            Id = new Guid("b2e33423-f04f-4415-aa20-11e67cbdd4d7"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(7149),
                            IsActive = true,
                            MenuId = new Guid("2460c8db-d314-4641-af03-967be6f30d90"),
                            PermissionId = new Guid("4a19587e-e893-48c2-ae4e-47e1e7fa18b7")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4db9e1c2-a4c0-4077-b59c-357c089fba7c"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(4946),
                            IsActive = true,
                            PermissionId = new Guid("7dda5e32-be88-4518-b6f7-06acb3a1d19e"),
                            RoleId = new Guid("5b4a4f18-a8e3-4b61-838e-0107447ec2e2")
                        },
                        new
                        {
                            Id = new Guid("cca5ba4b-6dc1-44fb-b63b-7401f63affc0"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(5549),
                            IsActive = true,
                            PermissionId = new Guid("e077db56-7019-4565-a4c9-b0162d186edb"),
                            RoleId = new Guid("5b4a4f18-a8e3-4b61-838e-0107447ec2e2")
                        },
                        new
                        {
                            Id = new Guid("dc93eb59-35ca-43c2-a117-79b3cad70e97"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(7029),
                            IsActive = true,
                            PermissionId = new Guid("519f1ec5-4345-4688-8a30-65238bd71787"),
                            RoleId = new Guid("5b4a4f18-a8e3-4b61-838e-0107447ec2e2")
                        },
                        new
                        {
                            Id = new Guid("3bdce0a1-a4a3-4270-a38f-fdf9d945cd5f"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(7171),
                            IsActive = true,
                            PermissionId = new Guid("4a19587e-e893-48c2-ae4e-47e1e7fa18b7"),
                            RoleId = new Guid("5b4a4f18-a8e3-4b61-838e-0107447ec2e2")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3638aee2-494e-42e7-9e48-368abd0e8a5a"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 412, DateTimeKind.Local).AddTicks(5511),
                            IsActive = true,
                            RoleId = new Guid("5b4a4f18-a8e3-4b61-838e-0107447ec2e2"),
                            UserId = new Guid("a6b46686-e4cb-47cc-b991-65e133c62e98")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2460c8db-d314-4641-af03-967be6f30d90"),
                            ControllerName = "Role",
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 414, DateTimeKind.Local).AddTicks(1859),
                            DisplayInMenu = true,
                            DisplayName = "Role Management",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7dda5e32-be88-4518-b6f7-06acb3a1d19e"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 414, DateTimeKind.Local).AddTicks(9633),
                            DisplayInMenu = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("e077db56-7019-4565-a4c9-b0162d186edb"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(5369),
                            DisplayInMenu = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("519f1ec5-4345-4688-8a30-65238bd71787"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(6907),
                            DisplayInMenu = false,
                            DisplayName = "Delete",
                            IsActive = true,
                            MethodName = "Delete"
                        },
                        new
                        {
                            Id = new Guid("4a19587e-e893-48c2-ae4e-47e1e7fa18b7"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 415, DateTimeKind.Local).AddTicks(7116),
                            DisplayInMenu = false,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b4a4f18-a8e3-4b61-838e-0107447ec2e2"),
                            CreatedDate = new DateTime(2020, 10, 8, 21, 10, 24, 401, DateTimeKind.Local).AddTicks(7031),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6b46686-e4cb-47cc-b991-65e133c62e98"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedDate = new DateTime(2020, 10, 8, 21, 10, 24, 412, DateTimeKind.Local).AddTicks(3523),
                            Email = "admin",
                            IsActive = true,
                            Name = "admin",
                            Password = "pKJA6M0zGMBm7Mv56CTAnL1HALnjgx3DgFEI/1VSBg0=",
                            Surname = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
