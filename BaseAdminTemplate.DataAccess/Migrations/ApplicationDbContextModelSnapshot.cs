// <auto-generated />
using System;
using BaseAdminTemplate.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaseAdminTemplate.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkMenusPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ff2e4f3-9474-4dfb-848a-c5af6fdce5b4"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(2674),
                            IsActive = true,
                            MenuId = new Guid("f647b102-25cc-440c-8f55-dab1ead4473d"),
                            PermissionId = new Guid("a52df285-9813-4f2a-928f-be48f59a3274")
                        },
                        new
                        {
                            Id = new Guid("d14b0d59-eaf4-4f9f-8efc-e4e756acd959"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(5432),
                            IsActive = true,
                            MenuId = new Guid("f647b102-25cc-440c-8f55-dab1ead4473d"),
                            PermissionId = new Guid("c37e83f9-30b9-41d1-a486-fb5cc54de5d6")
                        },
                        new
                        {
                            Id = new Guid("764ea87b-d247-45b4-bf44-38e0ce962d87"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(6936),
                            IsActive = true,
                            MenuId = new Guid("f647b102-25cc-440c-8f55-dab1ead4473d"),
                            PermissionId = new Guid("af332496-abbe-4566-b146-bb20ae37cbc8")
                        },
                        new
                        {
                            Id = new Guid("1d20c6e5-8f7b-439d-9cc1-d92228ae3bc0"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(7108),
                            IsActive = true,
                            MenuId = new Guid("f647b102-25cc-440c-8f55-dab1ead4473d"),
                            PermissionId = new Guid("17162112-f447-4043-a05f-45b2ad206c7e")
                        },
                        new
                        {
                            Id = new Guid("87ea54d0-2313-48c7-a6a1-fb9b9ba93ede"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(4999),
                            IsActive = true,
                            MenuId = new Guid("9f0559c7-6cc5-4bd1-8ca5-506960855c73"),
                            PermissionId = new Guid("8d33ca87-5573-45c7-ad27-85fd4fa87bba")
                        },
                        new
                        {
                            Id = new Guid("b6abaa8f-88f2-403e-a28f-c1d15c3c9435"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5296),
                            IsActive = true,
                            MenuId = new Guid("9f0559c7-6cc5-4bd1-8ca5-506960855c73"),
                            PermissionId = new Guid("a8db8b70-18ff-4c8f-bf5a-63519159e986")
                        },
                        new
                        {
                            Id = new Guid("18250d88-396d-4f52-98cd-1bb4f6a4d45c"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5604),
                            IsActive = true,
                            MenuId = new Guid("9f0559c7-6cc5-4bd1-8ca5-506960855c73"),
                            PermissionId = new Guid("37eaef25-5359-44d4-a735-61a2c21a3376")
                        },
                        new
                        {
                            Id = new Guid("1eecb51b-faa1-465d-9325-c20fd4301b29"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5740),
                            IsActive = true,
                            MenuId = new Guid("9f0559c7-6cc5-4bd1-8ca5-506960855c73"),
                            PermissionId = new Guid("cb86eec4-0c83-4609-9e3d-3e74942637c6")
                        },
                        new
                        {
                            Id = new Guid("7a15f561-3236-4748-a283-105f1d1337c9"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5880),
                            IsActive = true,
                            MenuId = new Guid("9f0559c7-6cc5-4bd1-8ca5-506960855c73"),
                            PermissionId = new Guid("72b2ed50-98f6-4e41-aab9-d54a61f863fc")
                        },
                        new
                        {
                            Id = new Guid("e63c619a-7101-4de8-83a0-8f44f99be3a6"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(6077),
                            IsActive = true,
                            MenuId = new Guid("9f0559c7-6cc5-4bd1-8ca5-506960855c73"),
                            PermissionId = new Guid("3770086e-7e61-4740-be01-1cac6093befc")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinkRolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("939bd41e-ab6f-462e-98e0-a2d38a7647ba"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(4830),
                            IsActive = true,
                            PermissionId = new Guid("a52df285-9813-4f2a-928f-be48f59a3274"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("082a9090-81b3-4e49-b80e-41ba43fca1f8"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(5487),
                            IsActive = true,
                            PermissionId = new Guid("c37e83f9-30b9-41d1-a486-fb5cc54de5d6"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("998d360d-8c86-4916-8cbb-b032994b1d38"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(6964),
                            IsActive = true,
                            PermissionId = new Guid("af332496-abbe-4566-b146-bb20ae37cbc8"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("229a415f-bcc1-41dc-bab2-4b6211548f3d"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(7131),
                            IsActive = true,
                            PermissionId = new Guid("17162112-f447-4043-a05f-45b2ad206c7e"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("1d81807b-7a95-40e9-9f48-dcdef96662e1"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5138),
                            IsActive = true,
                            PermissionId = new Guid("8d33ca87-5573-45c7-ad27-85fd4fa87bba"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("fdec17c9-500f-410b-84b2-ba73f375e508"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5338),
                            IsActive = true,
                            PermissionId = new Guid("a8db8b70-18ff-4c8f-bf5a-63519159e986"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("69cc2f68-6104-4751-a297-6fba470cbc4f"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5629),
                            IsActive = true,
                            PermissionId = new Guid("37eaef25-5359-44d4-a735-61a2c21a3376"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("7917abec-5a0c-4c39-acc1-cfb87a8dd0cc"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5765),
                            IsActive = true,
                            PermissionId = new Guid("cb86eec4-0c83-4609-9e3d-3e74942637c6"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("fe009f06-184b-48d4-9e67-722b906cc14a"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5958),
                            IsActive = true,
                            PermissionId = new Guid("72b2ed50-98f6-4e41-aab9-d54a61f863fc"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        },
                        new
                        {
                            Id = new Guid("5d194576-3443-4e1e-aaeb-b399837de489"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(6100),
                            IsActive = true,
                            PermissionId = new Guid("3770086e-7e61-4740-be01-1cac6093befc"),
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.LinkUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LinkUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a4f566f-9470-4ebb-af12-58c79714d578"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 863, DateTimeKind.Local).AddTicks(4596),
                            IsActive = true,
                            RoleId = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937"),
                            UserId = new Guid("11a5a9aa-b584-4f44-a8d8-6b8b37277d9e")
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f647b102-25cc-440c-8f55-dab1ead4473d"),
                            ControllerName = "Role",
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 865, DateTimeKind.Local).AddTicks(1227),
                            DisplayInMenu = true,
                            DisplayName = "Role Management",
                            IsActive = true
                        },
                        new
                        {
                            Id = new Guid("9f0559c7-6cc5-4bd1-8ca5-506960855c73"),
                            ControllerName = "User",
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(3894),
                            DisplayInMenu = true,
                            DisplayName = "User Management",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("DisplayInPermissionTree")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a52df285-9813-4f2a-928f-be48f59a3274"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 865, DateTimeKind.Local).AddTicks(8904),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "List",
                            IsActive = true,
                            MethodName = "List"
                        },
                        new
                        {
                            Id = new Guid("c37e83f9-30b9-41d1-a486-fb5cc54de5d6"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(5291),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        },
                        new
                        {
                            Id = new Guid("af332496-abbe-4566-b146-bb20ae37cbc8"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(6850),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = false,
                            DisplayName = "Delete",
                            IsActive = true,
                            MethodName = "Delete"
                        },
                        new
                        {
                            Id = new Guid("17162112-f447-4043-a05f-45b2ad206c7e"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 866, DateTimeKind.Local).AddTicks(7058),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("8d33ca87-5573-45c7-ad27-85fd4fa87bba"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(4908),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Active User List",
                            IsActive = true,
                            MethodName = "ActiveList"
                        },
                        new
                        {
                            Id = new Guid("a8db8b70-18ff-4c8f-bf5a-63519159e986"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5250),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deactivated User List",
                            IsActive = true,
                            MethodName = "DeactivatedList"
                        },
                        new
                        {
                            Id = new Guid("37eaef25-5359-44d4-a735-61a2c21a3376"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5558),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Edit",
                            IsActive = true,
                            MethodName = "Edit"
                        },
                        new
                        {
                            Id = new Guid("cb86eec4-0c83-4609-9e3d-3e74942637c6"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5703),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Deactivate",
                            IsActive = true,
                            MethodName = "Deactivate"
                        },
                        new
                        {
                            Id = new Guid("72b2ed50-98f6-4e41-aab9-d54a61f863fc"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(5839),
                            DisplayInMenu = false,
                            DisplayInPermissionTree = true,
                            DisplayName = "Restore",
                            IsActive = true,
                            MethodName = "Restore"
                        },
                        new
                        {
                            Id = new Guid("3770086e-7e61-4740-be01-1cac6093befc"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 869, DateTimeKind.Local).AddTicks(6038),
                            DisplayInMenu = true,
                            DisplayInPermissionTree = true,
                            DisplayName = "New",
                            IsActive = true,
                            MethodName = "Create"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa70bdf5-74f7-4cf7-b3db-1ab6c68f0937"),
                            CreatedDate = new DateTime(2020, 10, 10, 3, 16, 20, 852, DateTimeKind.Local).AddTicks(5148),
                            Description = "It has all permissions",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BaseAdminTemplate.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11a5a9aa-b584-4f44-a8d8-6b8b37277d9e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedDate = new DateTime(2020, 10, 10, 3, 16, 20, 863, DateTimeKind.Local).AddTicks(2503),
                            Email = "admin",
                            IsActive = true,
                            Name = "admin",
                            Password = "a/UlJadwnbomlQYEeSr7m/Mnf1uPrnNZ+52XZ7ppmnw=",
                            Surname = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
